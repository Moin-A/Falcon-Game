{"version":3,"sources":["Constants.js","initFunc.js","utility/helper.js","ui.js","gamestate.js","init.js"],"names":["MISSION_PLAN","online","gameState","MISSION_NO","planetList","vehicleList","initButtons","handleUser","handleSubmit","Result","window","addEventListener","e","$","toggleClass","on","target","attr","JSON","parse","val","preventDefault","confirm","initslider","slick","infinite","slidesToShow","dots","responsive","breakpoint","settings","popultateplanetlist","classname","data","document","getElementsByClassName","innerHTML","reduce","list","current","index","name","stringify","distance","popultatvehiclelist","replace","max_distance","total_no","speed","Normalizer","obj","value","Filter_vehicles","filteredlist","Object","values","filter","x","classList","toggle","Filter_planets","Enable_Submit_button","querySelector","removeAttribute","Animation","date","Date","now","parent","removeClass","addClass","scrollTo","position","behavior","requestAnimationFrame","Animation_vehicle","style","display","parseFloat","innerText","split","tag","button","Number","arr","Vehicle_toggle_func","mission_no","shift","includes","Set","Edit_MISSION_PLAN","planet","vehicle","no","querySelectorAll","add","Normalize_request_bdy","token","planet_names","vehicle_names","find_totalTime","map","fetch_result","url","Nrlzdata","response","fetch","method","headers","Accept","body","newdata","json","ModifyResultScreen","Search_Outcome","time","status","planet_name","empty","history","pushState","ModPlanets","ModVehicles","ModVoyage","self","PLAN","fetchApi","planetinfo","vehicleinfo","keys","selectPlanet","selectVehicle","totaltime","populate","loaderon","loadingModal","text","color","opacity","backgroundColor","animation","Reset","html","Array","from","forEach","getAttribute","loaderoff","bind","handleUserFunction","init"],"mappings":"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","file":"init.eec7fc14.js","sourceRoot":"../src","sourcesContent":["export const MISSION_PLAN = {\n  1: { online: false },\n  2: { online: false },\n  3: { online: false },\n  4: { online: false },\n};\nexport const gameState = {\n  MISSION_NO: \"1\",\n  MISSION_PLAN,\n  planetList: \"\",\n  vehicleList: \"\",\n};\n","import { Reset } from \"./gamestate\";\nimport { MISSION_PLAN } from \"./Constants\";\nexport function initButtons(handleUser, handleSubmit, Result) {\n  //handle user interaction\n  window.addEventListener(\"popstate\", (e) => {\n    $(\".inherit div.min-h-screen\").toggleClass(\"hidden\");\n  });\n  $(\".buttons\").on(\"click\", function buttonclick({ target }) {\n    handleUser({ [$(this).attr(\"name\")]: JSON.parse($(this).val()) });\n  });\n  $(\".submit_button\").on(\"click\", (e) => {\n    e.preventDefault();\n    if (window.confirm(\"Are you sure\")) {\n      handleSubmit();\n    }\n  });\n  $(\".reset\").on(\"click\", (e) => {\n    e.preventDefault();\n    Reset(MISSION_PLAN);\n  });\n}\n\nexport function initslider() {\n  $(\".slider\").slick({\n    infinite: false,\n    slidesToShow: 2,\n    dots: true,\n    infinite: false,\n    responsive: [\n      {\n        breakpoint: 1024,\n        settings: {\n          slidesToShow: 1,\n          infinite: true,\n        },\n      },\n      {\n        breakpoint: 600,\n        settings: {\n          slidesToShow: 1,\n          dots: true,\n        },\n      },\n      {\n        breakpoint: 300,\n        settings: \"unslick\", // destroys slick\n      },\n    ],\n  });\n}\n\nexport function popultateplanetlist(classname, data) {\n  document.getElementsByClassName(classname)[0].innerHTML = data.reduce(\n    (list, current, index) =>\n      list +\n      `<div class=\"p-3 ${current.name}\">\n            <div class=\"bg-gray-900 shadow-lg rounded p-3\">\n            <div class=\"group relative\">\n            <img class=\"w-full   block rounded\" src=\"https://upload.wikimedia.org/wikipedia/en/c/ca/Tycho_-_Awake.png\" alt=\"\">\n            <div class=\"absolute  h-full bg-black rounded bg-opacity-0 group-hover:bg-opacity-60 w-full h-full top-0 flex items-center group-hover:opacity-100 transition justify-evenly\">   \n            <button name=\"planet\" value=${JSON.stringify({\n              name: current.name,\n              distance: current.distance,\n            })} class=\"cursor-pointer fill-mode focus:animate-spin-slow  buttons bg-green-400 rounded-lg p-2 hover:scale-110 text-white opacity-0 transform translate-y-3 group-hover:translate-y-0 group-hover:opacity-100 transition\">\n            SELECT\n            </button>     \n            </div>\n            </div>\n            <div class=\"p-5\">\n            <h3 class=\"text-white text-lg\">${current.name}</h3>\n            <p class=\"text-gray-400\">Max-Distance:${current.distance}</p>\n            </div>\n            </div>\n           </div> \n           `,\n    \"\"\n  );\n}\n\nexport function popultatvehiclelist(classname, data) {\n  document.getElementsByClassName(classname)[0].innerHTML = data.reduce(\n    (list, current, index) =>\n      list +\n      `<div class=\"p-3 ${current.name.replace(\" \", \"-\")}\">\n            <div class=\"bg-gray-900 shadow-lg rounded p-3\">\n            <div class=\"group relative\">\n            <img class=\"w-full   block rounded\" src=\"https://cdn.dribbble.com/users/968846/screenshots/3528105/mekik3.png?compress=1&resize=400x300\" alt=\"\">\n            <div class=\"absolute  h-full bg-black rounded bg-opacity-0 group-hover:bg-opacity-60 w-full h-full top-0 flex items-center group-hover:opacity-100 transition justify-evenly\">   \n            <button name=\"vehicle\" value=${JSON.stringify({\n              name: current.name.replace(\" \", \"-\"),\n              max_distance: current.max_distance,\n              total_no: current.total_no,\n              speed: current.speed,\n            })} class=\"buttons cursor-pointer fill-mode focus:animate-spin-slow bg-green-400 rounded-lg p-2 hover:scale-110 text-white opacity-0 transform translate-y-3 group-hover:translate-y-0 group-hover:opacity-100 transition\">\n            SELECT\n            </button>         \n            </div>\n            </div>\n            <div class=\"p-5\">\n            <h3 class=\"text-white text-lg\">${current.name}</h3>\n            <p data-no=${\n              current.total_no\n            } class=\"text-gray-400 total_no\">Total No :${current.total_no}</p>\n            <p class=\"text-gray-400\">Max Distance :${current.max_distance}</p>\n            <p class=\"text-gray-400\">Speed :${current.speed}</p>\n            </div>\n            </div>\n           </div> \n           `,\n    \"\"\n  );\n}\n","export const Normalizer = (data) =>\n  data.reduce((obj, value) => {\n    let { name } = value;\n    return { [name]: value, ...obj };\n  }, {});\n\nexport const Filter_vehicles = (vehicleList, value) => {\n  let filteredlist = Object.values(vehicleList).filter(\n    (x) => x.max_distance < value.distance\n  );\n  for (let x of filteredlist) {\n    $(`.${x.name.replace(\" \", \"-\")} button`)[0].classList.toggle(\n      \"aria-disabled\"\n    );\n  }\n};\n\nexport const Filter_planets = (planetList, max_distance) => {\n  let filteredlist = planetList.filter((x) => x.distance > max_distance);\n  for (let x of filteredlist) {\n    $(`.${x.name} button`)[0].classList.toggle(\"aria-disabled\");\n  }\n};\n\nexport function Enable_Submit_button() {\n  document.querySelector(\".card-content button\").removeAttribute(\"disabled\");\n}\n\nexport function Animation(name, value, online) {\n  const date = Date.now();\n  function Animation() {\n    let obj = { name, value, online };\n\n    if (date + 1000 < Date.now()) {\n      if (!obj.online) {\n        $(\".planets .aria-disabled\").parent().removeClass(\"bg-opacity-60\");\n        $(\".planets .aria-disabled\").removeClass(\"aria-disabled\");\n        $(\".\" + obj.value.name + \" button\").addClass(\"aria-disabled\");\n      }\n      window.scrollTo({ ...$(\".vehicles\").position(), behavior: \"smooth\" });\n      return;\n    }\n    requestAnimationFrame(Animation);\n  }\n  return Animation();\n}\n\nexport function Animation_vehicle(value) {\n  const date = Date.now();\n  function Animation() {\n    let { name } = value;\n    $(`.${name} .total_no`)[0].style.display =\n      parseFloat($(`.${name} .total_no`)[0].innerText.split(\":\")[1]) == 0\n        ? \"none!important\"\n        : \"block!important\";\n\n    if (date + 1000 < Date.now()) {\n      window.scrollTo({ ...$(\".planets\").position(), behavior: \"smooth\" });\n      let tag = $(`.${name.replace(\" \", \"-\")} .total_no`);\n      let button = $(`.${name.replace(\" \", \"-\")} button`);\n\n      tag[0].innerText = `Total No :${Number(tag[0].innerText[10]) - 1}`;\n      button.attr(\"disabled\", tag[0].innerText[10] == 0);\n      return;\n    }\n    requestAnimationFrame(Animation);\n  }\n  Animation();\n}\n\nvar arr = [];\nexport function Vehicle_toggle_func(value, mission_no) {\n  if (arr.mission_no !== mission_no) {\n    arr.shift();\n  }\n  if (arr[0] && !arr.includes(value.name)) {\n    let tag = $(`div.${arr[0].replace(\" \", \"-\")} .total_no`)[0];\n    let button = $(`div.${arr[0].replace(\" \", \"-\")} button`);\n\n    tag.innerText =\n      \"Total No: \" +\n      (Number(\n        $(`div.${arr.shift().replace(\" \", \"-\")} .total_no`)[0].innerText[10]\n      ) +\n        1);\n\n    button.attr(\"disabled\", tag.innerText[10] == 0);\n  }\n\n  arr = [...new Set([value.name, ...arr])];\n  arr.mission_no = mission_no;\n}\n\nexport function Edit_MISSION_PLAN(planet, vehicle, no) {\n  document.querySelectorAll(\".text-xs h3\")[no - 1].innerText = planet\n    ? planet.name\n    : \"\";\n  document.querySelectorAll(\".text-xs p\")[no - 1].innerText = vehicle\n    ? vehicle.name\n    : \"\";\n  if (planet && vehicle) {\n    document\n      .querySelectorAll(\"span.rounded-full\")\n      [no - 1].classList.toggle(\"bg-yellow-500\");\n    document\n      .querySelectorAll(\"span.rounded-full\")\n      [no - 1].classList.add(\"bg-green-500\", \"animate-ping\");\n    document.querySelectorAll(\".status\")[no - 1].innerText = \"Online\";\n    $(\".aria-disabled\").toggleClass(\"aria-disabled\");\n\n    document\n      .querySelector(`.${planet.name} button`)\n      .classList.toggle(\"disabled\");\n  }\n}\n\nexport function Normalize_request_bdy(data, token) {\n  return data.reduce(\n    (obj, value) => {\n      let { planet, vehicle } = value;\n      let { planet_names, vehicle_names } = obj;\n      return {\n        token,\n        planet_names: [...planet_names, planet.name],\n        vehicle_names: [...vehicle_names, vehicle.name.replace(\"-\", \" \")],\n      };\n    },\n    { planet_names: [], vehicle_names: [] }\n  );\n}\n\nexport function find_totalTime(data) {\n  return data\n    .map(({ planet, vehicle }) => planet.distance / vehicle.speed)\n    .reduce((obj, value) => obj + value);\n}\n\nexport async function fetch_result(data, token) {\n  let url = data ? \"find\" : \"token\";\n  let Nrlzdata = data ? Normalize_request_bdy(Object.values(data), token) : {};\n\n  let response = await fetch(\"https://findfalcone.herokuapp.com/\" + url, {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    body: JSON.stringify(Nrlzdata),\n  });\n\n  let newdata = await response.json();\n\n  return await newdata;\n}\n\nexport function ModifyResultScreen(Search_Outcome, time) {\n  document.querySelector(\".result_screen h1\").innerText =\n    Search_Outcome.status !== \"success\"\n      ? \"The Mission was a Failure\"\n      : \"The Mission was a Success\";\n  $(\".inherit div.min-h-screen\").toggleClass(\"hidden\");\n\n  if (Search_Outcome.status == \"success\") {\n    document.querySelector(\n      \".result_screen p\"\n    ).innerHTML = `The Queen was found in ${Search_Outcome.planet_name}. The Mission took ${time} hours`;\n  }\n\n  if (Search_Outcome.status !== \"success\") {\n    document.querySelector(\".result_screen p\").empty.innerHTML = ``;\n  }\n  window.history.pushState({ data: \"moin\" }, \"New Page Title\", \"/result\");\n}\n","import {\n  Animation,\n  Animation_vehicle,\n  Vehicle_toggle_func,\n  Edit_MISSION_PLAN,\n} from \"./utility/helper\";\n\nexport function ModPlanets(name, value, online) {\n  Animation(name, value, online);\n}\n\nexport function ModVehicles(name, value, mission_no) {\n  Vehicle_toggle_func(value, mission_no);\n  Animation_vehicle(value);\n}\n\nexport function ModVoyage(no, self) {\n  const { planet, vehicle } = self[no];\n\n  Edit_MISSION_PLAN(planet, vehicle, no);\n}\n","import {\n  popultateplanetlist,\n  popultatvehiclelist,\n  initslider,\n} from \"./initFunc\";\nimport { ModPlanets, ModVehicles, ModVoyage } from \"./ui\";\nimport {\n  Normalizer,\n  Filter_vehicles,\n  Filter_planets,\n  Enable_Submit_button,\n  fetch_result as fetch_APi,\n  ModifyResultScreen,\n  find_totalTime,\n} from \"./utility/helper\";\nimport { MISSION_PLAN as PLAN } from \"./Constants\";\n\nconst gameState = {\n  MISSION_NO: \"1\",\n  MISSION_PLAN: { ...PLAN },\n  planetList: \"\",\n  vehicleList: \"\",\n\n  async fetchApi() {\n    let response = await fetch(\"https://findfalcone.herokuapp.com/planets\");\n    let data = await response.json();\n    this.planetList = await data;\n    response = await fetch(\"https://findfalcone.herokuapp.com/vehicles\");\n    data = await response.json();\n    this.vehicleList = Normalizer(data);\n  },\n\n  handleUser(value) {\n    //handle user actions\n\n    this.MISSION_PLAN[this.MISSION_NO] = {\n      ...this.MISSION_PLAN[this.MISSION_NO],\n      ...value,\n    };\n\n    let {\n      planet: planetinfo,\n      online,\n      vehicle: vehicleinfo,\n    } = this.MISSION_PLAN[this.MISSION_NO];\n\n    switch (Object.keys(value)[0]) {\n      case \"planet\":\n        this.selectPlanet(planetinfo, online);\n        break;\n      case \"vehicle\":\n        this.selectVehicle(vehicleinfo, online);\n        break;\n    }\n\n    if (vehicleinfo && planetinfo) {\n      this.MISSION_PLAN[this.MISSION_NO].online = true;\n    }\n\n    ModVoyage(this.MISSION_NO, this.MISSION_PLAN);\n\n    if (vehicleinfo && planetinfo) {\n      this.MISSION_NO++;\n    }\n\n    if (this.MISSION_NO == 5) {\n      Enable_Submit_button();\n    }\n  },\n\n  async handleSubmit() {\n    let { token } = await fetch_APi();\n    let Search_Outcome = await fetch_APi(this.MISSION_PLAN, token);\n    let totaltime = find_totalTime(Object.values(this.MISSION_PLAN));\n    ModifyResultScreen(Search_Outcome, totaltime);\n  },\n\n  selectPlanet(value, distance, online) {\n    $(\".vehicles .aria-disabled\").toggleClass(\"aria-disabled\");\n    Filter_vehicles(this.vehicleList, value);\n    ModPlanets(\"planet\", value, distance, online);\n  },\n  selectVehicle({ name, total_no, max_distance }) {\n    $(\".planets .aria-disabled\").toggleClass(\"aria-disabled\");\n    Filter_planets(this.planetList, max_distance);\n    ModVehicles(\"vehicle\", { name, total_no }, this.MISSION_NO);\n  },\n\n  populate() {\n    popultateplanetlist(\"planetlist\", this.planetList);\n    popultatvehiclelist(\"vehiclelist\", Object.values(this.vehicleList));\n  },\n  loaderon() {\n    $(\"body\").loadingModal({\n      position: \"auto\",\n      text: \"\",\n      color: \"#fff\",\n      opacity: \"0.7\",\n      backgroundColor: \"rgba(37, 37, 19, 1)\",\n      animation: \"wanderingCubes\",\n    });\n  },\n  Reset() {\n    this.MISSION_PLAN = { ...PLAN };\n    this.MISSION_NO = \"1\";\n    $(\".card-name-user\").html(\"<h3 class='font-semibold'></h3><p></p>\");\n    $(\".status\").html(\"offline\");\n    $(\".card-content-profil .gap-x-1\").html(\n      \"<span class='h-3 w-3 rounded-full bg-yellow-500'></span><span class='status'>offline</span></div>\"\n    );\n    $(\".aria-disabled\").toggleClass(\"aria-disabled\");\n    $(\".disabled\").toggleClass(\"disabled\");\n    $(\".buttons\").attr(\"disabled\", false);\n    Array.from($(\".total_no\")).forEach((x) => {\n      let name = x.getAttribute(\"data-no\");\n      x.innerText = `Total No :${name}`;\n    });\n  },\n  loaderoff() {\n    $(\"body\").loadingModal(\"hide\");\n    $(\"body\").loadingModal(\"destroy\");\n  },\n};\n\nexport default gameState;\nexport const Reset = gameState.Reset.bind(gameState);\nexport const handleSubmit = gameState.handleSubmit.bind(gameState);\nexport const handleUserFunction = gameState.handleUser.bind(gameState);\n","import gameState, {\n  handleUserFunction,\n  Reset,\n  handleSubmit,\n} from \"./gamestate\";\nimport { initButtons, initslider } from \"./initFunc\";\n\nasync function init() {\n  gameState.loaderon();\n  await gameState.fetchApi();\n  gameState.populate();\n  initslider();\n  initButtons(handleUserFunction, handleSubmit, Reset);\n  gameState.loaderoff();\n}\n\ninit();\n"]}